name: kinetix

services:
  db:
    image: container-registry.oracle.com/database/free:latest
    environment:
      ORACLE_PWD: "Kinetix-passw0rd"
      ORACLE_PDB: "kinetix"
    ports:
      - '1521:1521'
    volumes:
      - ./db:/opt/oracle/oradata
    healthcheck:
      test: ["CMD-SHELL", "echo 'SELECT 1 FROM DUAL;' | sqlplus -S / as sysdba"]
      interval: 10s
      retries: 15

  s3:
    image: minio/minio
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./s3:/data

  cache:
    image: redis:alpine
    ports:
      - '6379:6379'

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kinetix-api
    command: ["pm2", "start", "ecosystem.config.cjs", "--only", "kinetix-api"]
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
      s3:
        condition: service_started
    ports:
      - "4000:4000"
    environment:
      CACHE_ENDPOINTS: "redis:6379"
      DB_DIALECT: oracle
      DB_HOST: db
      DB_USER: sys
      DB_PASSWORD: "Kinetix-passw0rd"
      DB_NAME: kinetix
      FILES_HOSTING_SERVICE: "minio"
      MINIO_ENDPOINT: s3
      MINIO_SSL: false

  portal:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kinetix-portal
    command: ["pm2", "start", "ecosystem.config.cjs", "--only", "kinetix-portal"]
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
      s3:
        condition: service_started
    ports:
      - "4001:4001"
    environment:
      CACHE_ENDPOINTS: "redis:6379"
      DB_DIALECT: oracle
      DB_HOST: db
      DB_USER: sys
      DB_PASSWORD: "Kinetix-passw0rd"
      DB_NAME: kinetix
      FILES_HOSTING_SERVICE: "minio"
      MINIO_ENDPOINT: s3
      MINIO_SSL: false

  webhook:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kinetix-webhook
    command: ["pm2", "start", "ecosystem.config.cjs", "--only", "kinetix-webhook"]
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
      s3:
        condition: service_started
    ports:
      - "4002:4002"
    environment:
      CACHE_ENDPOINTS: "redis:6379"
      DB_AUTO_SYNC: false
      DB_DIALECT: oracle
      DB_HOST: db
      DB_USER: sys
      DB_PASSWORD: "Kinetix-passw0rd"
      DB_NAME: kinetix
      FILES_HOSTING_SERVICE: "minio"
      MINIO_ENDPOINT: s3
      MINIO_SSL: false